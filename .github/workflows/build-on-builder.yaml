name: build-on-builder

on:
  issue_comment:
    types:
      - created
      # TODO(kwk): The "created" type seems to ignore /build-on in review comments.
      # - edited # Not cool for user interaction

jobs:
  # This is the quick gatekeeper for this workflow.
  # Unless a comment starts with /build-on, we abort immediately. 
  require-build-on-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Check comment
        id: checkcomment
        run: echo ${{ github.event.comment.body }} | grep '^/build-on '
        # TODO(kwk): Support other flavors /must-build-on or /try-build-on ?

  check-if-builder-exists:
    needs: require-build-on-comment
    # We need to run this on a self-hosted github actions-runner because
    # the buildbot master in the test setup is not publically reachable.
    runs-on: [self-hosted]
    steps:
      - name: Set job variables
        id: vars
        # For the "::set-output" part, see
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
        run: |
          echo "::set-output name=pr-head-branch::issue-${{ github.event.issue.number }}-pr"
          echo "::set-output name=pr-base-branch::main"
          echo "::set-output name=builder-name::`echo ${{ github.event.comment.body }} | cut -d ' ' -f 2 | tr -d ' '`"

      # Get a list of available builders from
      # The list of builders returned from buildbot is prefixed with these two lines:
      #
      #  using 'pb' connect method
      #  The following builders are available for the try scheduler:
      # 
      # Then the results are separated by \n\n which we remove and replace with a comma.
      # TODO(kwk): What happens, if a builder contains a comman in it's name?
      # TODO(kwk): Removing the newlines seems silly (is it needed because otherwise you'd only see one trybuilder?)
      - name: Get try-builder list
        id: gettrybuilders
        shell: bash
        run: |
          echo "::set-output name=namelist::`for i in $(buildbot try \
            --master master:8031 \
            --passwd='${{ secrets.TRY_PASSWORD }}' \
            --username='${{ secrets.TRY_USER }}' \
            --connect='pb' \
            --get-builder-names \
            | sed '1,/The following builders are available for the try scheduler:/d' \
            | tr -d '\r'); do echo "<li>$i</li>"; done \
            | tr -d '\n'`"
    
      - name: Check that user's try builder exists
        id: check_try_builder_exists
        env:
          TRY_BUILDER_EXISTS: ${{ contains(steps.gettrybuilders.outputs.namelist, steps.vars.outputs.builder-name) }}
        run: |
          if ${TRY_BUILDER_EXISTS} == true; then
            echo "::set-env try_builder_exists=flag::true"
            console.log("try_builder_exists set to true")
          else
            echo "::set-env try_builder_exists=flag::false"
            console.log("try_builder_exists set to false")
          fi

      - name: Write comment about unknown try-builder
        uses: actions/github-script@v3
        if: not(env.try_builder_exists)
        with:
          # GitHub provides a token that you can use to authenticate on behalf of GitHub Actions.
          # See https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          github-token: ${{secrets.GITHUB_TOKEN}}
          debug: true
          script: |
            // Wrapper function that prepends the given ID to the message as a comment before
            // creating the comment.
            async function createComment(pullRequestNumber, id, message) {
              const body = `<!-- #${id} -->\n\n${message}`
              await github.issues.createComment({
                ...context.repo,
                issue_number: pullRequestNumber,
                body
              })
            }

            const message = `Sorry but, there's no try builder called <code>${{steps.vars.outputs.builder-name}}</code>. You can only choose from these try builders:
              <ul>
                ${{ steps.gettrybuilders.outputs.namelist }}
              </ul>
              `
            core.info(message)
            await createComment(context.issue.number, 'trybuilder-unknown', message)
      
      - name: checkout code
        id: checkout_code
        uses: actions/checkout@v2
        if: env.try_builder_exists
      
      - name: Kick off try-build
        id: kick_off_try_builder
        if: env.try_builder_exists
        # See this page for getting a description about the values I'm filling in for the build properties:
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables#default-environment-variables
        shell: bash
        run: |
          buildbot try \
            --master master:8031 \
            --passwd='${{ secrets.TRY_PASSWORD }}' \
            --username='${{ secrets.TRY_USER }}' \
            --connect='pb' \
            --vc="git" \
            --baserev="main" \
            --comment='TODO(kwk): Come up with a better comment but try to do something with a UUID for followup comments ;)' \
            --who='${{ github.event.pull_request.user.login }}' \
            --repository='${{ github.repository }}'

  # buildbot try \
  #   --master master:8031 \
  #   --passwd='${{ secrets.TRY_PASSWORD }}' \
  #   --username='${{ secrets.TRY_USER }}' \
  #   --connect='pb' \
  #   --vc="git" \
  #   --baserev='${{ GITHUB_BASE_REF }}' \
  #   --comment='TODO(kwk): Come up with a better comment but try to do something with a UUID for followup comments ;)' \
  #   --who='${{ github.event.pull_request.user.login }}' \
  #   --property=github-workflow-initiator='${{ GITHUB_ACTOR }}' \
  #   --property=pr-number='${{ github.vent.issue.number }}' \
  #   --property=github-workflow-name='${{ GITHUB_WORKFLOW }}' \
  #   --property=github-repository='${{ GITHUB_REPOSITORY }}' \
  #   --property=github-commit-sha='${{ GITHUB_SHA }}' \
  #   --property=github-ref='${{ GITHUB_REF }}' \
  #   --property=github-head-ref='${{ GITHUB_HEAD_REF }}' \
  #   --property=github-base-ref='${{ GITHUB_BASE_REF }}' \
  #   --repository='${{ github.repository }}'

  # try-build:
  #   needs: check-if-builder-exists
  #   # We need to run this on a self-hosted github actions-runner because
  #   # the buildbot master in the test setup is not publically reachable.
  #   runs-on: [self-hosted]
  #   steps:
  #     - name: Checkout Pull Request
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Build using buildbot try
  #       run: |
  #         buildbot try \
  #           --master master:8031 \
  #           --passwd="${{ secrets.TRY_PASSWORD }}" \
  #           --username="${{ secrets.TRY_USER }}" \
  #           --connect="pb" \
  #           --vc="git" \
  #           --builder="${{ steps.vars.outputs.builder-name }}" \
  #           --baserev="main" \
  #           --branch="main" \
  #           --repository="${{ github.repository }}"
      # - name: Summary
      #   if: ${{ always() }}
      #   # For grouping see:
      #   # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#grouping-log-lines
      #   run: |
      #     echo "::group::{Summary}"
      #     echo "You've scheduled a build on ${{ steps.vars.outputs.builder-name }}"
      #     echo "::endgroup::"
      # # - name: Checkout code master code
      # #   if: startswith(github.event.comment.body, '/build-on ') 
      # #   uses: actions/checkout@v2
      # #   with:
      # #     fetch-depth: 0
      # #     # Repository name with owner. For example, actions/checkout
      # #     # Default: ${{ github.repository }}
      # #     repository: kwk/llvm-ci-demo
      # #     ref: ${{ steps.vars.outputs.pr-base-branch }}

  #     - name: Build using buildbot try
  #       run: |
  #         buildbot try \
  #           --master master:8031 \
  #           --passwd="${{ secrets.TRY_PASSWORD }}" \
  #           --username="${{ secrets.TRY_USER }}" \
  #           --connect="pb" \
  #           --vc="git" \
  #           --builder="${{ steps.vars.outputs.builder-name }}" \
  #           --baserev="main" \
  #           --branch="main" \
  #           --repository="${{ github.repository }}"
  #     - name: Summary
  #       if: ${{ always() }}
  #       # For grouping see:
  #       # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#grouping-log-lines
  #       run: |
  #         echo "::group::{Summary}"
  #         echo "You've scheduled a build on ${{ steps.vars.outputs.builder-name }}"
  #         echo "::endgroup::"
  #     # - name: Checkout code master code
  #     #   if: startswith(github.event.comment.body, '/build-on ') 
  #     #   uses: actions/checkout@v2
  #     #   with:
  #     #     fetch-depth: 0
  #     #     # Repository name with owner. For example, actions/checkout
  #     #     # Default: ${{ github.repository }}
  #     #     repository: kwk/llvm-ci-demo
  #     #     ref: ${{ steps.vars.outputs.pr-base-branch }}      